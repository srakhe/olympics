# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1seUt-Q0nb_IHpIcbTKp9cSdDm5XCQqNb
"""

!pip install snscrape
!pip install transformers

import snscrape.modules.twitter as sntwitter
import pandas as pd

# Creating list to append tweet data to
tweets_list2 = []

# Using TwitterSearchScraper to scrape data and append tweets to list
for i,tweet in enumerate(sntwitter.TwitterSearchScraper('Olympics since:2021-07-17 until:2021-07-23').get_items()):
    # print(i)
    # print(tweet.username)
    if i>10000:
        break
    tweets_list2.append([tweet.date, tweet.id, tweet.content, tweet.username])
    
# Creating a dataframe from the tweets list above
tweets_df2 = pd.DataFrame(tweets_list2, columns=['Datetime', 'Tweet Id', 'Text', 'Username'])

tweets_df2.to_csv('Sentiment_Analysis_Before_Olympic_Start.csv')

from transformers import pipeline
import tensorflow as tf
sentiment_classifier = pipeline('sentiment-analysis')

results = sentiment_classifier(tweets_df2['Text'].tolist())

for result in results:
    print(f"label: {result['label']}, with score: {round(result['score'], 4)}")


results_df = pd.DataFrame(results,columns=['label','score'])
results_df.head()
print(results_df.groupby('label').count())

tweets_list2 = []

# Using TwitterSearchScraper to scrape data and append tweets to list
for i,tweet in enumerate(sntwitter.TwitterSearchScraper('Olympics since:2021-07-23 until:2021-08-01').get_items()):
    # print(i)
    # print(tweet.username)
    if i>10000:
        break
    tweets_list2.append([tweet.date, tweet.id, tweet.content, tweet.username])
    
# Creating a dataframe from the tweets list above
tweets_df2 = pd.DataFrame(tweets_list2, columns=['Datetime', 'Tweet Id', 'Text', 'Username'])

tweets_df2.to_csv('Sentiment_Analysis_After_Olympic_End.csv')

from transformers import pipeline
import tensorflow as tf
sentiment_classifier = pipeline('sentiment-analysis')

results = sentiment_classifier(tweets_df2['Text'].tolist())

for result in results:
    print(f"label: {result['label']}, with score: {round(result['score'], 4)}")


results_df = pd.DataFrame(results,columns=['label','score'])
results_df.head()
print(results_df.groupby('label').count())
